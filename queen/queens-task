def solve_nqueens(n):
    board = [[0] * n for _ in range(n)]
    solutions = []

    def is_safe(board, row, col):
        for i in range(row):
            if board[i][col] == 1:
                return False


        for i, j in zip(range(row, -1, -1), range(col, -1, -1)):
            if board[i][j] == 1:
                return False


        for i, j in zip(range(row, -1, -1), range(col, n)):
            if board[i][j] == 1:
                return False
        return True

    def solve(board, row):
        if row == n:

            solutions.append([row[:] for row in board])
            return

        for col in range(n):
            if is_safe(board, row, col):
                board[row][col] = 1
                solve(board, row + 1)
                board[row][col] = 0

    solve(board, 0)
    return solutions


solutions = solve_nqueens(8)
print(f"Найдено {len(solutions)} решений.")
